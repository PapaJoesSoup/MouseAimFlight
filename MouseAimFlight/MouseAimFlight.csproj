<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{D2DAA7FD-486F-438F-ACDF-9EEC00F3B2F6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>MouseAimFlight</RootNamespace>
    <AssemblyName>MouseAimFlight</AssemblyName>
    <TargetFrameworkVersion>v3.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Assembly-CSharp">
      <HintPath>..\..\_LocalDev\KSPRefs\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="KSPAssets">
      <HintPath>..\..\_LocalDev\KSPRefs\KSPAssets.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="UnityEngine">
      <HintPath>..\..\_LocalDev\KSPRefs\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>..\..\_LocalDev\KSPRefs\UnityEngine.UI.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AdaptivePID.cs" />
    <Compile Include="FlightModes\CruiseFlight.cs" />
    <Compile Include="FlightModes\AggressiveFlight.cs" />
    <Compile Include="FlightModes\Flight.cs" />
    <Compile Include="FlightBehavior.cs" />
    <Compile Include="FlightModes\NormalFlight.cs" />
    <Compile Include="MouseAimFlightSceneGUI.cs" />
    <Compile Include="MouseAimSettings.cs" />
    <Compile Include="MouseAimVesselModule.cs" />
    <Compile Include="PID.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="VectorUtils.cs" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>//xcopy /y "$(TargetPath)" "$(SolutionDir)GameData\MouseAimFlight\Plugins"

@echo $(Targetname)
SET ModName=MouseAimFlight

rem this step strips the solutionName from the git path to give us the root folder for locating the LocalDev Folder
rem the echo commands are commented.  used for testing of the desired path.
set GIT_PATH=$(SolutionDir)
rem @echo %25GIT_PATH%25
set GIT_PATH=%25GIT_PATH:MouseAimFlight\=%25
rem @echo %25GIT_PATH%25

@echo ...
@echo set lpath vars from "%25GIT_PATH%25_LocalDev\LocalDev" storage...
set /p KSP_DIR=&lt;"%25GIT_PATH%25_LocalDev\ksp_dir.txt"
set /p PDB2MDB_EXE=&lt;"%25GIT_PATH%25_LocalDev\pdb2mdb_exe.txt"
set /p ZA_DIR=&lt;"%25GIT_PATH%25_LocalDev\7za_dir.txt"
set /p DIST_DIR=&lt;"%25GIT_PATH%25_LocalDev\dist_dir.txt"

@echo Copying assemblies to Distribution $(Targetname) files...
if not exist "$(SolutionDir)Distribution\GameData\%25ModName%25\Plugins\" mkdir "$(SolutionDir)Distribution\GameData\%25ModName%25\Plugins\"
xcopy /E /Y "$(TargetDir)"MouseAimFlight*.dll "$(SolutionDir)Distribution\GameData\%25ModName%25\Plugins\"

if $(ConfigurationName) == Debug (
@echo building debug files and symbols...
FOR %25%25A IN ("$(TargetDir)"MouseAimFlight*.dll) DO (
call "%25PDB2MDB_EXE%25" %25%25A
)
copy /Y "$(TargetDir)"MouseAimFlight*.dll.mdb "%25KSP_DIR%25\GameData\%25ModName%25\Plugins\"
copy /Y "$(TargetDir)"MouseAimFlight*.pdb "%25KSP_DIR%25\GameData\%25ModName%25\Plugins\"
)

@echo deleting previous build ...
if exist "%25DIST_DIR%25\%25ModName%25*.zip" del "%25DIST_DIR%25\%25ModName%25*.zip"
@echo packaging new build...
call "%25ZA_DIR%25\7za.exe" a -tzip -r  "%25DIST_DIR%25\%25ModName%25.@(VersionNumber)_%25DATE:~4,2%25%25DATE:~7,2%25%25DATE:~10,4%25%25time:~0,2%25%25time:~3,2%25.zip" "$(SolutionDir)Distribution\*.*"

@echo Deploy $(SolutionDir) Distribution files to test env:  %25KSP_DIR%25\GameData...
@echo copying:"$(SolutionDir)Distribution\GameData" to "%25KSP_DIR%25\GameData" 
xcopy /E /Y "$(SolutionDir)GameData" "%25KSP_DIR%25\GameData"


@echo Build/deploy complete!</PostBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <Target Name="PostBuildMacros">
    <GetAssemblyIdentity AssemblyFiles="$(TargetPath)">
      <Output TaskParameter="Assemblies" ItemName="Targets" />
    </GetAssemblyIdentity>
    <ItemGroup>
      <VersionNumber Include="@(Targets->'%(Version)')" />
    </ItemGroup>
  </Target>
  <PropertyGroup>
    <PostBuildEventDependsOn>
    $(PostBuildEventDependsOn);
    PostBuildMacros;
  </PostBuildEventDependsOn>
  </PropertyGroup>
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
  </PropertyGroup>
</Project>